'\"macro stdmacro
.\"
.\" Copyright (c) 2016,2017 Red Hat.
.\" Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.
.\" 
.\" This program is free software; you can redistribute it and/or modify it
.\" under the terms of the GNU General Public License as published by the
.\" Free Software Foundation; either version 2 of the License, or (at your
.\" option) any later version.
.\" 
.\" This program is distributed in the hope that it will be useful, but
.\" WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
.\" or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
.\" for more details.
.\" 
.\"
.TH PMPREDICATE 1 "PCP" "Performance Co-Pilot"
.SH NAME
\f3pmpredicate\f1 \- a simple performance metrics client filter
.\" literals use .B or \f3
.\" arguments use .I or \f2
.SH SYNOPSIS
\f3pmpredicate\f1
[\f3\-t\f1 \f2interval\f1]
[\f3\-j\f1 \f2json_prefix\f1]
\f3\-f\f1 \f2predicate\f1
[\f3\-r\f1 \f2rank\f1]
[\f3\-m\f1 \f2metric\f1]
[\f3\-d\f1 \f2directory\f1]
[\f3\-u\f1 \f2user\f1]
[\f3\-s\f1 \f2samples\f1]
[\f3\-b\f1]
[\f3\-?\f1]
.SH DESCRIPTION
.B pmpredicate
is a simple client that reads a set of metrics which it filters
based on a predicate and the optional rank operation.  It
limits the results to the instances that have the predicate true and
optionally to some maximum number of instances with the highest
predicate values.  The results are stored JSON files useable by
.BR PMDADJSON(1) .
.PP
Other options control the specific information to be reported.
.TP
\f3\-t\f1 \f2interval\f1
The default update \f2interval\f1 may be set to something other than the
default 5 seconds.
The
.I interval
argument follows the syntax described in
.BR PCPIntro (1),
and in the simplest form may be an unsigned integer (the implied
units in this case are seconds).
.TP
\f3\-j\f1 \f2json_prefix\f1
The json prefix for the set of metrics generated by pmpredicate
may be set to something other than the default of "prefix".
This allows multiple concurrent pmpredicate processes to run
without encountering a collision in PMNS.
.TP
\f3\-f\f1 \f2predicate\f1
Exactly one predicate metric is required by pmpredicate.  For the
predicate metrics instances with values greater than zero matching
each metric with metric with matching instances are included in the
JSON data.
.TP
\f3\-r\f1 \f2top\f1
By default all the metrics instances that the predicate matches will
be included in the JSON data.  The rank option limits the number of
instances to a maximum of \f2top\f1 items with the largest predicate
values.
.TP
\f3\-m\f1 \f2metric\f1
Each metric to filter with pmpredicate is specified with this option.
There must be at least one metric specified.
.TP
\f3\-d\f1 \f2directory\f1
By default
.B pmpredicate
creates a directory with the PID number in 
.IR $PCP_TMP_DIR/json
and writes the JSON files in the created directory.
A different directory to write the results can be specified with this option.
.TP
\f3\-s\f1 \f2samples\f1
The argument
.I samples
defines the number of samples to be collected before
the
.B pmpredicate
exits.
If samples is 0 or
.B \-s
is not specified,
.B pmpredicate
will sample and report continuously.
.TP
\f3\-b\f1
For diagnostic purposes the different data.json files can be saved to help debug issues with
.B pmpredicate.
.TP
\f3\-?\f1
Show
.B pmpredicate
invocation help and exit.
.PP
The output from
.B pmpredicate
is two JSON files: metadata.json and data.son.  These files are
useable by
.BR PMDADJSON(1) .
.IP + 3
The metadata.json describe the metrics names, units, and types.  It is written when the pmpredicate starts
.IP +
The data.json has the filtered data that and is periodically updated at the specified interval.
.PP
.SH EXAMPLE
.PP
With PMDA JSON installed and running the following would provide a new metric
called json.big_proc.metrics.proc_psinfo_rss that would just have the
top five instances of user processes consuming machine memory:
.sp
.nf
.ft CW
$ pmpredicate -r 5 -j top_mem_user -f proc.psinfo.rss -m proc.psinfo.rss
.sp
.SH FILES
.PD 0
.TP 10
.B $PCP_DEMOS_DIR/pmpredicate
source code, documentation, configuration files and Makefile
when the PCP development package is installed
.PD
.SH "PCP ENVIRONMENT"
Environment variables with the prefix
.B PCP_
are used to parameterize the file and directory names
used by PCP.
On each installation, the file
.I /etc/pcp.conf
contains the local values for these variables.
The
.B $PCP_CONF
variable may be used to specify an alternative
configuration file,
as described in
.BR pcp.conf (5).
.SH SEE ALSO
.BR PCPIntro (1),
.BR pmcd (1),
.BR pmchart (1),
.BR pmdumptext (1),
.BR pmgenmap (1),
.BR pminfo (1),
.BR pmdajson (1),
.BR pmrep (1),
.BR pmstat (1),
.BR pmval (1),
.BR PMAPI (3),
.BR pmFetchGroup (3),
.BR pcp.conf (5)
and
.BR pcp.env (5).
.SH DIAGNOSTICS
All are generated on standard error, and are intended to be self-explanatory.
