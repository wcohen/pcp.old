#
# pmrep(1) configuration file - see pmrep.conf(5)
#

#
# General options
#
[options]
#version = 1
#source = local:
#output = stdout
#speclocal =
#derived = /path/derived.conf
#header = yes
#unitinfo = yes
#globals = yes
#timestamp = no
#samples =
#interval = 1s
#delay = no
#type = default
#ignore_incompat = no
#instances =
#omit_flat = no
#colxrow =
#width =
#precision = 3
#delimiter =
#extheader = no
#repeat_header = 0
#timefmt = %H:%M:%S
#interpol = yes
#count_scale = count
#space_scale = kB
#time_scale = sec

# Compact metric specifications are of form (see pmrep(1)):
#pcp.metric.name = label,instance(s),unit/scale,type,column-width

#
# Global metrics - included as part of other sets (unless disabled with -G)
#
[global]
#nproc = kernel.all.runnable
#kernel.all.runnable = nproc,,,,

#
# Per process metricsets
#
[proc-info]
derived = proc.psinfo.age = kernel.all.uptime - proc.psinfo.start_time
proc.psinfo.pid = ,,
proc.id.uid_nm = ,,
proc.psinfo.cmd = ,,,,16
proc.psinfo.psargs = ,,,,32
proc.psinfo.ttyname = ,,
proc.psinfo.age = ,,

[proc-info-ext]
proc.psinfo.pid = ,,
proc.psinfo.ppid = ,,
proc.psinfo.session = ,,
proc.id.uid = ,,
proc.id.gid = ,,
proc.id.euid = ,,
proc.id.egid = ,,
proc.namespaces.pid = ,,
proc.namespaces.sid = ,,

[proc-essential]
proc.psinfo.pid = ,,
proc.psinfo.cmd = ,,,,16
cpupct = proc.psinfo.cpu.pct
cpupct.formula = 100 * (rate(proc.psinfo.utime) + rate(proc.psinfo.stime))
cpuratio = proc.psinfo.cpu.ratio
cpuratio.formula = 100 * (instant(proc.psinfo.utime) + instant(proc.psinfo.stime)) / (kernel.all.uptime - proc.psinfo.start_time)
mempct = proc.memory.pct
mempct.formula = 100 * ((proc.memory.vmrss + proc.memory.vmswap) / hinv.physmem)
memreal = proc.memory.vmreal
memreal.formula = proc.memory.vmrss + proc.memory.vmswap
proc.memory.vmhwm = ,,
iopct = p.i.io_pct
iopct.formula = 100 * ((delta(proc.io.read_bytes) + delta(proc.io.write_bytes) - delta(proc.io.cancelled_write_bytes)) / (delta(disk.all.read_bytes) + delta(disk.all.write_bytes)))
iotot = proc.io.total_bytes
iotot.formula = instant(proc.io.read_bytes) + instant(proc.io.write_bytes) - instant(proc.io.cancelled_write_bytes)
iotot.unit = kb/s
iototal = p.i.cum_bytes
iototal.formula = instant(proc.io.read_bytes) + instant(proc.io.write_bytes) - instant(proc.io.cancelled_write_bytes)
iototal.unit = kb

[proc-cpu]
proc.psinfo.processor = ,,
proc.psinfo.priority = ,,
proc.psinfo.nice = ,,
cpupct = proc.psinfo.cpu.pct
cpupct.formula = 100 * (rate(proc.psinfo.utime) + rate(proc.psinfo.stime))
cpuratio = proc.psinfo.cpu.ratio
cpuratio.formula = 100 * (instant(proc.psinfo.utime) + instant(proc.psinfo.stime)) / (kernel.all.uptime - proc.psinfo.start_time)
proc.psinfo.threads = ,,
proc.psinfo.sname = ,,
proc.psinfo.utime = ,,
proc.psinfo.stime = ,,

[proc-cpu-ext]
proc.psinfo.vctxsw = ,,
proc.psinfo.nvctxsw = ,,
proc.psinfo.minflt = ,,
proc.psinfo.maj_flt = ,,
proc.schedstat.cpu_time = ,,ms/s
proc.schedstat.pcount = ,,
proc.schedstat.run_delay = ,,ms/s
proc.psinfo.wchan_s = ,,
proc.psinfo.blocked_s = ,,

[proc-mem]
derived = proc.memory.vmreal = proc.memory.vmrss + proc.memory.vmswap,proc.memory.vmnonlib = proc.memory.vmrss + proc.memory.vmswap - proc.memory.vmlib
proc.memory.vmsize = ,,
proc.memory.vmreal = ,,
proc.memory.vmrss = ,,
proc.memory.vmlib = ,,
proc.memory.vmnonlib = ,,
proc.memory.vmswap = ,,

[proc-mem-ext]
proc.memory.vmdata = ,,
proc.memory.vmexe = ,,
proc.memory.vmpeak = ,,
proc.memory.vmhwm = ,,
proc.memory.vmlock = ,,
proc.memory.vmstack = ,,

[proc-io]
derived = proc.io.total_bytes = instant(proc.io.read_bytes) + instant(proc.io.write_bytes) - instant(proc.io.cancelled_write_bytes)
proc.fd.count = ,,
proc.io.total_bytes = ,,kb/s
proc.io.read_bytes = ,,kb/s
proc.io.write_bytes = ,,kb/s
proc.io.rchar = ,,kb/s
proc.io.wchar = ,,kb/s

[proc-io-ext]
proc.io.syscr = ,,
proc.io.syscw = ,,
proc.io.cancelled_write_bytes = ,,
proc.psinfo.delayacct_blkio_time = ,,

#[proc-net]
#[proc-net-ext]

[proc-children]
proc.psinfo.cmin_flt = ,,
proc.psinfo.cmaj_flt = ,,
proc.psinfo.cutime = ,,ms/s
proc.psinfo.cstime = ,,ms/s

#[proc-java]
#[proc-java-ext]

[proc-os-stats]
kernel.all.sysfork = ,,
proc.runq.runnable = ,,
proc.runq.blocked = ,,
proc.runq.sleeping = ,,
proc.runq.stopped = ,,
proc.runq.swapped = ,,
proc.runq.defunct = ,,
proc.runq.unknown = ,,
proc.runq.kernel = ,,

#
# Common utilities emulation
#

#[iostat]
#[iostat-c]
#[iostat-d]
#[iostat-p]
#[iostat-x]

[mpstat]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
colxrow = "    CPU"
precision = 2
delimiter = " "
auser = kernel.cpu.util.user
auser.label = %%usr
auser.formula = (100 * rate(kernel.all.cpu.user)) / hinv.ncpu
auser.width = 7
anice = kernel.cpu.util.nice
anice.label = %%nice
anice.formula = (100 * rate(kernel.all.cpu.nice)) / hinv.ncpu
anice.width = 7
asys = kernel.cpu.util.sys
asys.label = %%sys
asys.formula = (100 * rate(kernel.all.cpu.sys)) / hinv.ncpu
asys.width = 7
await = kernel.cpu.util.wait
await.label = %%iowait
await.formula = (100 * rate(kernel.all.cpu.wait.total)) / hinv.ncpu
await.width = 7
aintr = kernel.cpu.util.hard
aintr.label = %%irq
aintr.formula = (100 * rate(kernel.all.cpu.irq.hard)) / hinv.ncpu
aintr.width = 7
asoft = kernel.cpu.util.soft
asoft.label = %%soft
asoft.formula = (100 * rate(kernel.all.cpu.irq.soft)) / hinv.ncpu
asoft.width = 7
asteal = kernel.cpu.util.steal
asteal.label = %%steal
asteal.formula = (100 * rate(kernel.all.cpu.steal)) / hinv.ncpu
asteal.width = 7
aguest = kernel.cpu.util.guest
aguest.label = %%guest
aguest.formula = (100 * rate(kernel.all.cpu.guest)) / hinv.ncpu
aguest.width = 7
agnice = kernel.cpu.util.guest_nice
agnice.label = %%gnice
agnice.formula = (100 * rate(kernel.all.cpu.guest_nice)) / hinv.ncpu
agnice.width = 7
aidle = kernel.all.cpu.idlep
aidle.label = %%idle
aidle.formula = 100 * kernel.all.cpu.idle / hinv.ncpu
aidle.unit = s
aidle.width = 7

[mpstat-I-SUM]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
colxrow = "    CPU"
precision = 2
delimiter = " "
kernel.all.intr = intr/s,,,,9

[mpstat-P-ALL]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
colxrow = "    CPU"
precision = 2
delimiter = " "
repeat_header = 1
auser = kernel.cpu.util.user
auser.label = %%usr
auser.formula = (100 * rate(kernel.all.cpu.user)) / hinv.ncpu
auser.width = 7
anice = kernel.cpu.util.nice
anice.label = %%nice
anice.formula = (100 * rate(kernel.all.cpu.nice)) / hinv.ncpu
anice.width = 7
asys = kernel.cpu.util.sys
asys.label = %%sys
asys.formula = (100 * rate(kernel.all.cpu.sys)) / hinv.ncpu
asys.width = 7
await = kernel.cpu.util.wait
await.label = %%iowait
await.formula = (100 * rate(kernel.all.cpu.wait.total)) / hinv.ncpu
await.width = 7
aintr = kernel.cpu.util.hard
aintr.label = %%irq
aintr.formula = (100 * rate(kernel.all.cpu.irq.hard)) / hinv.ncpu
aintr.width = 7
asoft = kernel.cpu.util.soft
asoft.label = %%soft
asoft.formula = (100 * rate(kernel.all.cpu.irq.soft)) / hinv.ncpu
asoft.width = 7
asteal = kernel.cpu.util.steal
asteal.label = %%steal
asteal.formula = (100 * rate(kernel.all.cpu.steal)) / hinv.ncpu
asteal.width = 7
aguest = kernel.cpu.util.guest
aguest.label = %%guest
aguest.formula = (100 * rate(kernel.all.cpu.guest)) / hinv.ncpu
aguest.width = 7
agnice = kernel.cpu.util.guest_nice
agnice.label = %%gnice
agnice.formula = (100 * rate(kernel.all.cpu.guest_nice)) / hinv.ncpu
agnice.width = 7
aidle = kernel.all.cpu.idlep
aidle.label = %%idle
aidle.formula = 100 * kernel.all.cpu.idle / hinv.ncpu
aidle.unit = s
aidle.width = 7
puser = kernel.percpu.util.user
puser.label = %%usr
puser.formula = 100 * rate(kernel.percpu.cpu.user)
puser.width = 7
pnice = kernel.percpu.util.nice
pnice.label = %%nice
pnice.formula = 100 * rate(kernel.percpu.cpu.nice)
pnice.width = 7
psys = kernel.percpu.util.sys
psys.label = %%sys
psys.formula = 100 * rate(kernel.percpu.cpu.sys)
psys.width = 7
pwait = kernel.percpu.util.wait
pwait.label = %%iowait
pwait.formula = 100 * rate(kernel.percpu.cpu.wait.total)
pwait.width = 7
pintr = kernel.percpu.util.hard
pintr.label = %%irq
pintr.formula = 100 * rate(kernel.percpu.cpu.irq.hard)
pintr.width = 7
psoft = kernel.percpu.util.soft
psoft.label = %%soft
psoft.formula = 100 * rate(kernel.percpu.cpu.irq.soft)
psoft.width = 7
psteal = kernel.percpu.util.steal
psteal.label = %%steal
psteal.formula = 100 * rate(kernel.percpu.cpu.steal)
psteal.width = 7
pguest = kernel.percpu.util.guest
pguest.label = %%guest
pguest.formula = 100 * rate(kernel.percpu.cpu.guest)
pguest.width = 7
pgnice = kernel.percpu.util.guest_nice
pgnice.label = %%gnice
pgnice.formula = 100 * rate(kernel.percpu.cpu.guest_nice)
pgnice.width = 7
pidle = kernel.percpu.percpu.idlep
pidle.label = %%idle
pidle.formula = 100 * rate(kernel.percpu.cpu.idle)
pidle.width = 7

[pidstat]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
precision = 2
delimiter = " "
repeat_header = 1
colxrow = "   PID"
proc.id.uid = UID,,,,11
upct = proc.psinfo.cpu.util.user
upct.formula = 100 * rate(proc.psinfo.utime)
upct.label = %%usr
upct.width = 7
spct = proc.psinfo.cpu.util.sys
spct.formula = 100 * rate(proc.psinfo.stime)
spct.label = %%system
spct.width = 7
gpct = proc.psinfo.cpu.util.guest_time
gpct.formula = 100 * rate(proc.psinfo.guest_time)
gpct.label = %%guest
gpct.width = 7
#wpct = proc.psinfo.cpu.util.wait
#wpct.formula = 100 * rate(proc.psinfo.wait)
#wpct.label = %%wait
#wpct.width = 7
allcpu = proc.psinfo.alltime
allcpu.label = %%CPU
allcpu.formula = 100 * (proc.psinfo.utime + proc.psinfo.stime + proc.psinfo.guest_time)
allcpu.unit = s
allcpu.width = 7
proc.psinfo.processor = CPU,,,,5
proc.psinfo.cmd = Command,,,,16

#[pidstat-d]
#[pidstat-R]
#[pidstat-r]
#[pidstat-s]
#[pidstat-u]
#[pidstat-v]
#[pidstat-w]

#[sar]

[sar-B]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
precision = 2
delimiter = " "
pgpgin = mem.vmstat.pgpgin
pgpgin.label = pgpgin/s
pgpgin.width = 12
pgpgout = mem.vmstat.pgpgout
pgpgout.label = pgpgout/s
pgpgout.width = 9
fault = mem.vmstat.pgfault
fault.label = fault/s
fault.width = 9
majflt = mem.vmstat.pgmajfault
majflt.label = majflt/s
majflt.width = 9
pgfree = mem.vmstat.pgfree
pgfree.label = pgfree/s
pgfree.width = 9
pgscank = mem.vmstat.pgscan_kswapd
pgscank.label = pgscank/s
pgscank.width = 9
pgscand = mem.vmstat.pgscan_direct_all
pgscand.formula = mem.vmstat.pgscan_direct + mem.vmstat.pgscan_direct_throttle
pgscand.label = pgscand/s
pgscand.width = 9
pgsteal = mem.vmstat.pgsteal_all
pgsteal.label = pgsteal/s
pgsteal.formula = mem.vmstat.pgsteal_kswapd + mem.vmstat.pgsteal_direct
pgsteal.width = 9
vmeff = mem.vmstat.vmeff
vmeff.label = %%vmeff
vmeff.formula =
 (
  delta(mem.vmstat.pgscan_kswapd) +
  delta(mem.vmstat.pgscan_direct) +
  delta(mem.vmstat.pgscan_direct_throttle)
 ) == 0
 ? mkconst(0, type="double", semantics="instant")
 : 100 *
   (
    delta(mem.vmstat.pgsteal_kswapd) +
    delta(mem.vmstat.pgsteal_direct)
   )
  /
   (
    delta(mem.vmstat.pgscan_kswapd) +
    delta(mem.vmstat.pgscan_direct) +
    delta(mem.vmstat.pgscan_direct_throttle)
   )
vmeff.width = 9

[sar-b]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
precision = 2
tps = disk.all.total
tps.label = tps
tps.width = 11
rtps = disk.all.read
rtps.label = rtps
rtps.width = 8
wtps = disk.all.write
wtps.label = wtps
wtps.width = 8
bread = disk.all.blkread
bread.label = bread/s
bread.width = 8
bwrtn = disk.all.blkwrite
bwrtn.label = bwrtn/s
bwrtn.width = 8

[sar-d-dev]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
colxrow = "        DEV"
precision = 2
repeat_header = 1
tps = disk.dev.total
tps.label = tps
tps.width = 8
rbps = disk.dev.read_bytes
rbps.label = rkB/s
rbps.unit = kB/s
rbps.width = 8
wbps = disk.dev.write_bytes
wbps.label = wkB/s
wbps.unit = kB/s
wbps.width = 8
areq_sz = disk.dev.avg_rqsz
areq_sz.label = areq-sz
areq_sz.formula = (delta(disk.dev.read_bytes) + delta(disk.dev.write_bytes)) / (delta(disk.dev.read) + delta(disk.dev.write))
areq_sz.width = 8
aqu_sz = disk.dev.avg_qlen
aqu_sz.label = aqu-sz
aqu_sz.formula = disk.dev.avg_qlen = rate(disk.dev.read_rawactive) + rate(disk.dev.write_rawactive)
aqu_sz.width = 8
await = disk.dev.await
await.label = await
await.formula = (delta(disk.dev.read_rawactive) + delta(disk.dev.write_rawactive)) / (delta(disk.dev.read) + delta(disk.dev.write))
await.width = 8
svctm = disk.dev.svctm
svctm.label = svctm
svctm.formula = 0 * rate(disk.dev.avactive)
svctm.width = 8
util = disk.dev.util_pct
util.label = %%util
util.formula = 100 * rate(disk.dev.avactive)
util.width = 8

[sar-d-dm]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
colxrow = "        DEV"
precision = 2
repeat_header = 1
tps = disk.dm.total
tps.label = tps
tps.width = 8
rbps = disk.dm.read_bytes
rbps.label = rkB/s
rbps.unit = kB/s
rbps.width = 8
wbps = disk.dm.write_bytes
wbps.label = wkB/s
wbps.unit = kB/s
wbps.width = 8
areq_sz = disk.dm.avg_rqsz
areq_sz.label = areq-sz
areq_sz.formula = (delta(disk.dm.read_bytes) + delta(disk.dm.write_bytes)) / (delta(disk.dm.read) + delta(disk.dm.write))
areq_sz.width = 8
aqu_sz = disk.dm.avg_qlen
aqu_sz.label = aqu-sz
aqu_sz.formula = disk.dm.avg_qlen = rate(disk.dm.read_rawactive) + rate(disk.dm.write_rawactive)
aqu_sz.width = 8
await = disk.dm.await
await.label = await
await.formula = (delta(disk.dm.read_rawactive) + delta(disk.dm.write_rawactive)) / (delta(disk.dm.read) + delta(disk.dm.write))
await.width = 8
svctm = disk.dm.svctm
svctm.label = svctm
svctm.formula = 0 * rate(disk.dm.avactive)
svctm.width = 8
util = disk.dm.util_pct
util.label = %%util
util.formula = 100 * rate(disk.dm.avactive)
util.width = 8

[sar-F]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
colxrow = "           FILESYSTEM"
precision = 2
repeat_header = 1
MBfsfree = filesys.free
MBfsfree.label = MBfsfree
MBfsfree.unit = MB
MBfsfree.width = 8
MBfsused = filesys.used
MBfsused.label = MBfsused
MBfsused.unit = MB
MBfsused.width = 8
fsusedp = filesys.used_pct
fsusedp.label = %%fsused
fsusedp.formula = 100 * (filesys.used / filesys.capacity)
fsusedp.width = 8
ufsusedp = filesys.user_used_pct
ufsusedp.label = %%ufsused
ufsusedp.formula = 100 * ((filesys.capacity - filesys.avail) / filesys.capacity)
ufsusedp.width = 8
ifree = filesys.freefiles
ifree.label = Ifree
ifree.width = 10
iused = filesys.usedfiles
iused.label = Iused
iused.width = 10
iusedp = filesys.usedfiles_pct
iusedp.label = %%Iused
iusedp.formula = 100 * (filesys.usedfiles / filesys.maxfiles)
iusedp.width = 8

[sar-H]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
precision = 2
delimiter = " "
kbhugfree = mem.util.hugepagesFreeBytes
kbhugfree.label = kbhugfree
kbhugfree.unit = kb
kbhugfree.width = 12
kbhugused = mem.util.hugepagesRsvdBytes
kbhugused.label = kbhugused
kbhugused.unit = kb
kbhugused.width = 9
hugusedp = mem.util.hugepagesRsvd_pct
hugusedp.label = %%hugused
hugusedp.formula = 100 * ((mem.util.hugepagesTotalBytes - mem.util.hugepagesFreeBytes) / mem.util.hugepagesTotalBytes)
hugusedp.width = 9

[sar-I-SUM]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
colxrow = "       INTR"
precision = 2
intr = kernel.all.intr
intr.label = intr/s
intr.width = 8

#[sar-m]
#[sar-n-DEV]
#[sar-n-NFS]
#[sar-n-NFSD]
#[sar-n-TCP-ETCP]
#[sar-q]
#[sar-r]
#[sar-S]
#[sar-u]
#[sar-v]

[sar-W]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
precision = 2
delimiter = " "
time_scale = s
pswpin = mem.vmstat.pswpin
pswpin.label = pswpin/s
pswpin.width = 12
pswpout = mem.vmstat.pswpout
pswpout.label = pswpout/s
pswpout.width = 9

[sar-w]
header = yes
unitinfo = no
globals = no
timestamp = yes
interval = 1s
type = default
precision = 2
delimiter = " "
sysfork = kernel.all.sysfork
sysfork.label = proc/s
sysfork.width = 12
pswitch = kernel.all.pswitch
pswitch.label = cswch/s
pswitch.width = 9

#[sar-y]

[vmstat]
header = yes
unitinfo = no
globals = no
timestamp = no
interval = 1s
type = default
precision = 0
delimiter = " "
repeat_header = 22
kernel.all.running = r,,,,3
kernel.all.blocked = b,,,,3
swap.used = swpd,,,,7
mem.util.free = free,,,,8
mem.util.bufmem = buff,,,,7
allcache = mem.util.allcache
allcache.label = cache
allcache.formula = mem.util.cached + mem.util.slab
allcache.width = 7
swap.pagesin = si,,,,5
swap.pagesout = so,,,,5
mem.vmstat.pgpgin = bi,,,,6
mem.vmstat.pgpgout = bo,,,,6
kernel.all.intr = in,,,,5
kernel.all.pswitch = cs,,,,6
alluser = kernel.all.cpu.alluserp
alluser.label = us
alluser.formula = 100 * (kernel.all.cpu.user + kernel.all.cpu.nice) / hinv.ncpu
alluser.unit = s
sys = kernel.all.cpu.sysp
sys.label = sy
sys.formula = 100 * kernel.all.cpu.sys / hinv.ncpu
sys.unit = s
idle = kernel.all.cpu.idlep
idle.label = id
idle.formula = 100 * kernel.all.cpu.idle / hinv.ncpu
idle.unit = s
wtotal = kernel.all.cpu.wait.totalp
wtotal.label =  wa
wtotal.formula = 100 * kernel.all.cpu.wait.total / hinv.ncpu
wtotal.unit = s
steal = kernel.all.cpu.stealp
steal.label = st
steal.formula = 100 * kernel.all.cpu.steal / hinv.ncpu
steal.unit = s

[vmstat-a]
header = yes
unitinfo = no
globals = no
timestamp = no
interval = 1s
type = default
precision = 0
delimiter = " "
repeat_header = 22
kernel.all.running = r,,,,3
kernel.all.blocked = b,,,,3
swap.used = swpd,,,,7
mem.util.free = free,,,,8
mem.util.inactive = inact,,,,7
mem.util.active = active,,,,7
swap.pagesin = si,,,,5
swap.pagesout = so,,,,5
mem.vmstat.pgpgin = bi,,,,6
mem.vmstat.pgpgout = bo,,,,6
kernel.all.intr = in,,,,5
kernel.all.pswitch = cs,,,,6
alluser = kernel.all.cpu.alluserp
alluser.label = us
alluser.formula = 100 * (kernel.all.cpu.user + kernel.all.cpu.nice) / hinv.ncpu
alluser.unit = s
sys = kernel.all.cpu.sysp
sys.label = sy
sys.formula = 100 * kernel.all.cpu.sys / hinv.ncpu
sys.unit = s
idle = kernel.all.cpu.idlep
idle.label = id
idle.formula = 100 * kernel.all.cpu.idle / hinv.ncpu
idle.unit = s
wtotal = kernel.all.cpu.wait.totalp
wtotal.label =  wa
wtotal.formula = 100 * kernel.all.cpu.wait.total / hinv.ncpu
wtotal.unit = s
steal = kernel.all.cpu.stealp
steal.label = st
steal.formula = 100 * kernel.all.cpu.steal / hinv.ncpu
steal.unit = s

#[vmstat-d]
#[vmstat-p]

[vmstat-w]
header = yes
unitinfo = no
globals = no
timestamp = no
interval = 1s
type = default
precision = 0
delimiter = " "
repeat_header = 22
kernel.all.running = r,,,,3
kernel.all.blocked = b,,,,3
swap.used = swpd,,,,13
mem.util.free = free,,,,13
mem.util.bufmem = buff,,,,13
allcache = mem.util.allcache
allcache.label = cache
allcache.formula = mem.util.cached + mem.util.slab
allcache.width = 13
swap.pagesin = si,,,,5
swap.pagesout = so,,,,5
mem.vmstat.pgpgin = bi,,,,6
mem.vmstat.pgpgout = bo,,,,6
kernel.all.intr = in,,,,5
kernel.all.pswitch = cs,,,,6
alluser = kernel.all.cpu.alluserp
alluser.label = us
alluser.formula = 100 * (kernel.all.cpu.user + kernel.all.cpu.nice) / hinv.ncpu
alluser.unit = s
alluser.width = 4
sys = kernel.all.cpu.sysp
sys.label = sy
sys.formula = 100 * kernel.all.cpu.sys / hinv.ncpu
sys.unit = s
sys.width = 4
idle = kernel.all.cpu.idlep
idle.label = id
idle.formula = 100 * kernel.all.cpu.idle / hinv.ncpu
idle.unit = s
idle.width = 4
wtotal = kernel.all.cpu.wait.totalp
wtotal.label =  wa
wtotal.formula = 100 * kernel.all.cpu.wait.total / hinv.ncpu
wtotal.unit = s
wtotal.width = 4
steal = kernel.all.cpu.stealp
steal.label = st
steal.formula = 100 * kernel.all.cpu.steal / hinv.ncpu
steal.unit = s
steal.width = 4
