#!/bin/sh
# PCP QA Test No. 1385
# pmdaprometheus scalability testing
# specifically scaling number of nodes at once
#
# Note: if anything gets added or changed in qa/prometheus/samples directory,
# then this test (and all tests in group pmda.prometheus) will need to be remade.
#
# Copyright (c) 2017 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.prometheus

_pmdaprometheus_check || _notrun "prometheus pmda and/or load generator not installed"

status=1	# failure is the default!
$sudo rm -rf $tmp $tmp.* $seq.full
totalendpoints=100 #total queue to work through
endpoints=1 #prometheus endpoints
iterations=4
metrics=10
instances=10

_cleanup()
{
    # no need to kill load generator
    return 0
}

_prepare_pmda prometheus
trap "_cleanup _cleanup_pmda prometheus; exit \$status" 0 1 2 3 15

_pmdaprometheus_save_config
_pmdaprometheus_install

$python $here/prometheus/prometheus_endpoint.python \
	--output=$PCP_PMDAS_DIR/prometheus/urls.d/ \
	--total $totalendpoints \
	--endpoints $endpoints \
	--metrics $metrics \
	--instances $instances \
	--limit $iterations >$tmp.endpoint 2>&1 &
pid=$!

if ! _pmdaprometheus_wait_for_metric prometheus.source0
then
    _pmdaprometheus_restore_config
    status=1
    exit
fi

if pminfo -b 10000000 -v `pminfo prometheus | LC_COLLATE=POSIX sort` > $tmp.info 2> $tmp.err
then
    :
else
    echo "... failed! ... here is the Install log ..."
    cat $tmp.out
fi
cat $tmp.info $tmp.err
#sleep 120
if pminfo -b 10000000 -fd `pminfo prometheus | LC_COLLATE=POSIX sort` > $tmp.info 2>$tmp.err
   then
    echo "Fetch and desc prometheus metrics: success"
    cat $tmp.info
else
    echo "Fetch and desc prometheus metrics: failed"
    cat $tmp.err
fi

pminfo -b 10000000 -tf `pminfo prometheus.source0 | LC_COLLATE=POSIX sort`

for i in `seq 1 1 99`
do
    pminfo -b 10000000 -tf `pminfo prometheus.source$i | LC_COLLATE=POSIX sort`
    pminfo -b 10000000 -tf `pminfo prometheus.source$i | LC_COLLATE=POSIX sort`
    pminfo -b 10000000 -tf `pminfo prometheus.source$i | LC_COLLATE=POSIX sort`
    sleep 0.5
done

_pmdaprometheus_remove
_pmdaprometheus_restore_config
find $PCP_VAR_DIR/config/pmda -name "144.*" -type f -print0 | $sudo xargs -0 rm -rf

# success, all done
status=0
exit
