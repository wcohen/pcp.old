QA output created by 098
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory on once -> mandatory on once
pmlc> log mandatory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory on once sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory on once -> mandatory maybe
pmlc> log mandatory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory maybe sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory on once -> mandatory off
pmlc> log mandatory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory off sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory on once -> advisory on once
pmlc> log mandatory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory on once sample.seconds
Warning: unable to change logging state for:
sample.seconds

pmlc> query sample.seconds
sample.seconds
    mand on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory on once -> advisory off
pmlc> log mandatory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory off sample.seconds
Warning: unable to change logging state for:
sample.seconds

pmlc> query sample.seconds
sample.seconds
    mand on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory maybe -> mandatory on once
pmlc> log mandatory maybe sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory on once sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory maybe -> mandatory maybe
pmlc> log mandatory maybe sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory maybe sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory maybe -> mandatory off
pmlc> log mandatory maybe sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory off sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory maybe -> advisory on once
pmlc> log mandatory maybe sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory on once sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory maybe -> advisory off
pmlc> log mandatory maybe sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory off sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory off -> mandatory on once
pmlc> log mandatory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory on once sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory off -> mandatory maybe
pmlc> log mandatory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory maybe sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory off -> mandatory off
pmlc> log mandatory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory off sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory off -> advisory on once
pmlc> log mandatory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory on once sample.seconds
Warning: unable to change logging state for:
sample.seconds

pmlc> query sample.seconds
sample.seconds
    mand off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # mandatory off -> advisory off
pmlc> log mandatory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory off sample.seconds
Warning: unable to change logging state for:
sample.seconds

pmlc> query sample.seconds
sample.seconds
    mand off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory on once -> mandatory on once
pmlc> log advisory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory on once sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory on once -> mandatory maybe
pmlc> log advisory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory maybe sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory on once -> mandatory off
pmlc> log advisory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory off sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory on once -> advisory on once
pmlc> log advisory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory on once sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory on once -> advisory off
pmlc> log advisory on once sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory off sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory off -> mandatory on once
pmlc> log advisory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory on once sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory off -> mandatory maybe
pmlc> log advisory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory maybe sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory off -> mandatory off
pmlc> log advisory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory off sample.seconds
pmlc> query sample.seconds
sample.seconds
    mand off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory off -> advisory on once
pmlc> log advisory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory on once sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  on             once

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> # setup
pmlc> log mandatory maybe sample.seconds
pmlc> # advisory off -> advisory off
pmlc> log advisory off sample.seconds
pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log advisory off sample.seconds
pmlc> query sample.seconds
sample.seconds
    adv  off                

pmlc> 
Performance Co-Pilot Logger Control (pmlc), Version VERSION

[command summary deleted ...]

Connected to pmlogger at HOSTNAME
pmlc> log mandatory on 25 msec sample.long.one
pmlc> 
Log for pmlogger on HOST started DATE

Config parsed
Starting logger for host "HOST"
Archive basename: ARCHIVE

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds [request failed]

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds [request failed]

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds [request failed]

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds [request failed]

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory on once
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory maybe
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: advisory off
  metric: sample.dupnames.two.seconds or sample.seconds

DATE
pmlc request from HOST: mandatory on 0.0 sec
  metric: sample.long.one
pmlogger: Sample limit reached, exiting

Log finished DATE

Uniq filtered entries from pmdumplog ...
2.0.23 (pmcd.pid): value NUMBER
2.0.24 (pmcd.seqnum): value NUMBER
2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
29.0.10 (sample.long.one): value NUMBER
29.0.2 (sample.dupnames.two.seconds or sample.seconds): value NUMBER
